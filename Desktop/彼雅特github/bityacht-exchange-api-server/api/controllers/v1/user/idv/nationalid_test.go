package idv

import (
	errpkg "bityacht-exchange-api-server/internal/pkg/err"
	"testing"
)

// Generator & Verification: https://hugo.digitalgo.synology.me/2022/04/%E8%BA%AB%E5%88%86%E8%AD%89%E5%AD%97%E8%99%9F%E6%96%B0%E5%BC%8F%E5%B1%85%E7%95%99%E8%AD%89%E8%99%9F%E8%88%8A%E5%BC%8F%E5%B1%85%E7%95%99%E8%AD%89%E8%99%9F%E5%8F%8A%E7%B5%B1%E4%B8%80%E7%B7%A8%E8%99%9F%E7%94%A2%E7%94%9F%E5%99%A8%E6%9A%A8%E9%A9%97%E8%AD%89%E5%99%A8/
func Test_validateNationalID(t *testing.T) {
	tests := []struct {
		name           string
		isARC          bool
		nationalIDList []string
		wantErrCode    errpkg.Code
	}{
		{
			"valid",
			false,
			[]string{"A162393909", "A237826246", "B178324242", "B234046934", "C198837901", "C250935642", "D149730050", "D254561596", "E116449778", "E241698405", "F158845048", "F268276333", "G183078190", "G286577423", "H103688719", "H230431755", "J168032083", "J231051083", "K193661502", "K208308676", "L168551566", "L287222297", "M134127164", "M214825376", "N153979161", "N253937521", "P130730041", "P282830603", "Q116295457", "Q297355734", "R149236683", "R294171013", "S123741073", "S270327005", "T177622324", "T272818582", "U174590684", "U224966881", "V166104166", "V229935458", "X103967298", "X232448786", "Y174554162", "Y245584612", "W172529706", "W249504077", "Z111766780", "Z225744356", "O132177981", "O280266768", "I149958888", "I261981534"},
			0,
		},
		{
			"invalid",
			false,
			[]string{"A162393900", "A237826247", "B178324243", "B234046935", "C198837902", "C250935643", "D149730051", "D254561597", "E116449779", "E241698406", "F158845049", "F268276334", "G183078191", "G286577425", "H103688711", "H230431757", "J168032085", "J231051085", "K193661505", "K208308679", "L168551569", "L287222290", "M134127168", "M214825370", "N153979165", "N253937525", "P130730046", "P282830608", "Q116295452", "Q297355739", "R149236689", "R294171019", "S123741079", "S270327002", "T177622321", "T272818589", "U174590681", "U224966888", "V166104164", "V229935456", "X103967296", "X232448784", "Y174554161", "Y245584611", "W172529705", "W249504076", "Z111766789", "Z225744355", "O132177980", "O280266769", "I149958882", "I261981537", "AB", "AB12345678"},
			errpkg.CodeBadNationalID,
		},
		{
			"valid_arc",
			true,
			[]string{"AA51260433", "AC34718256", "AB53206939", "AD86218756", "HB74225299", "HD79704388", "HC26017925", "HA82809912", "RC37501408", "RA45722819", "RD51971155", "RB00232356", "ZD14695531", "ZB33910031", "ZA19748951", "ZC67025329"},
			0,
		},
		{
			"invalid_arc",
			true,
			[]string{"AAA1260433", "AZ34718256", "AX53206939", "ADX6218756", "HB74225298", "HD79704382", "HC26017924", "HA828099141", "RC37501400", "RA4572281X", "RD519C1155", "Rb00232356", "Zd14695531", "zB33910031", "ZA19748953", "ZC67025X20"},
			errpkg.CodeBadNationalID,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			for _, nationalID := range tt.nationalIDList {
				if got := validateNationalID(nationalID, tt.isARC); !got.CodeEqualTo(tt.wantErrCode) {
					t.Errorf("validateNationalID() = %v, wantErrCode %v", got, tt.wantErrCode)
				}
			}
		})
	}
}
